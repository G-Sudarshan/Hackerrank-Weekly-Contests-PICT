/*

The Fibonacci numbers are generated by setting F0 = 0, F1 = 1, and then using the recursive formula Fn = Fn-1 + Fn-2, to get the rest. Thus the sequence begins: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34. . . . . . This sequence of Fibonacci numbers arises all over mathematics and also in nature.

Input Format

1st Line contains single integer N denoting number of test cases.
The rest lines contain integer F0, F1, Fn
Constraints

1 <= T <= 100 1<= F0, F1, Fn <= 10^9

Output Format

For each test case output a single integer Fn

Sample Input 0

2
2 3 1
11 12 5
Sample Output 0

3
93

*/

/**
* Author: G Sudarshan
* Date: 28/8/2021
*/

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) {

        // write_your_code_here
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int f0=0;
        int f1=0;
        int fn=0;
        int temp=0;
        int[] res = new int[n];
        for(int i=0;i<n;i++){
            f0=in.nextInt();
            f1=in.nextInt();
            fn=in.nextInt();
            
            if(fn==0){
                res[i]=f0;
            }
            else if(fn==1){
                res[i]=f1;
            }else{
                for(int j=2; j<=fn; j++){
                    temp = f0 + f1;
                    f0=f1;
                    f1=temp;
                }
                res[i]=temp;
                temp=0;
            }    
        }
        
        for(int i=0; i<n ; i++){
            System.out.println(res[i]);
        }
        

    }
}
